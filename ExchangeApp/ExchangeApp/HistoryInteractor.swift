//
//  HistoryInteractor.swift
//  ExchangeApp
//
//  Created by Юрий Нориков on 03.12.2019.
//  Copyright (c) 2019 norikoff. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryBusinessLogic
{
    func doSomething(request: History.Something.Request)
    func getListOfOrders()
}

protocol HistoryDataStore
{
    //var name: String { get set }
}

class HistoryInteractor: HistoryBusinessLogic, HistoryDataStore
{
    var presenter: HistoryPresentationLogic?
    var worker: HistoryWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: History.Something.Request)
    {
        //    worker = HistoryWorker()
        //    worker?.doSomeWork()
        
        //    let response = History.Something.Response()
        //    presenter?.presentSomething(response: response)
    }
    
    func getListOfOrders() {
        let utils = UtilsService()
        let worker = PoloniexApiService(utilService: utils)
        worker.getOrders { result in
            switch result {
            case .success(let data):
                let response = History.Something.Response.init(orders: data)
                self.presenter?.presentOrders(response: response)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }
}
