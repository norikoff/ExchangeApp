//
//  TradePresenter.swift
//  ExchangeApp
//
//  Created by Юрий Нориков on 04.12.2019.
//  Copyright (c) 2019 norikoff. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TradePresentationLogic
{
    func presentChart(response: Trade.Something.Response)
    func presentUpdateChart(response: Trade.Something.Response)
    func presentError(response: Trade.Something.Response)
    func presentSuccess(response: Trade.Something.Response)
}

class TradePresenter: TradePresentationLogic
{
  weak var viewController: TradeDisplayLogic?
  
  // MARK: Action
    
    func presentChart(response: Trade.Something.Response){
        let viewModel = Trade.Something.ViewModel(chart: response.chart, errorMessage: response.errorMessage)
        viewController?.displayChart(viewModel: viewModel)
    }
    
    func presentUpdateChart(response: Trade.Something.Response){
        let viewModel = Trade.Something.ViewModel(chart: response.chart, errorMessage: response.errorMessage)
        viewController?.displayUpdatedChart(viewModel: viewModel)
    }
    
    func presentError(response: Trade.Something.Response) {
        let viewModel = Trade.Something.ViewModel(chart: nil, errorMessage: response.errorMessage)
        viewController?.displayAllert(viewModel: viewModel)
    }
    
    func presentSuccess(response: Trade.Something.Response){
        let viewModel = Trade.Something.ViewModel(chart: nil, errorMessage: response.errorMessage)
        viewController?.displaySuccess(viewModel: viewModel)
    }

}
