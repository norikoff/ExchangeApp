//
//  WalletInteractor.swift
//  ExchangeApp
//
//  Created by Юрий Нориков on 03.12.2019.
//  Copyright (c) 2019 norikoff. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WalletBusinessLogic
{
  func doSomething(request: Wallet.Something.Request)
    func getWallet()
}

protocol WalletDataStore
{
  //var name: String { get set }
}

class WalletInteractor: WalletBusinessLogic, WalletDataStore
{
    
  var presenter: WalletPresentationLogic?
  var worker: WalletWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Wallet.Something.Request)
  {
    worker = WalletWorker()
    worker?.doSomeWork()
    
//    let response = Wallet.Something.Response()
//    presenter?.presentSomething(response: response)
  }
    
    func getWallet() {
        let utils = UtilsService()
        let service = PoloniexApiService(utilService: utils)
        service.getWallet { result in
            switch result {
            case .success(let data):
                let response = Wallet.Something.Response.init(wallet: data)
                self.presenter?.presentWallet(response: response)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }
    
}
